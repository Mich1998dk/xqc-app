{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/thqv/Desktop/Bachelor/xqc-app/src/screens/home/Home.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Header, IconButton } from \"../../components/molecules/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container } from \"../../containers/index\";\nimport \"../../redux/reducers\";\nimport { colors } from \"../../utils/theme\";\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    loading: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var dispatch = useDispatch();\n  var redux = useSelector(function (state) {\n    return state;\n  });\n\n  var testConnection = function testConnection() {\n    return _regeneratorRuntime.async(function testConnection$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch(\"http://bjth.itu.dk:5001/\", {\n              method: \"GET\"\n            }).then(function (resp) {\n              return resp.json();\n            }).then(function (res) {\n              console.log(res);\n            }).catch(function (err) {\n              console.error(\"Error:\", err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var initExquisitor = function initExquisitor() {\n    return _regeneratorRuntime.async(function initExquisitor$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetch(\"http://bjth.itu.dk:5001/initExquisitor\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (resp) {\n              return resp.json();\n            }).then(function (res) {\n              console.log(res);\n            }).catch(function (err) {\n              console.error(\"Error:\", err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {});\n    return unsubscribe;\n  }, [navigation]);\n  var data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    title: \"XQC\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    menu: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    columnWrapperStyle: {\n      justifyContent: \"space-between\"\n    },\n    data: data,\n    numColumns: 2,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          if (selected.includes(item)) {\n            var _index = selected.indexOf(item);\n\n            var temp = _toConsumableArray(selected);\n\n            temp.splice(_index, 1);\n            setSelected(temp);\n          } else {\n            var newArray = [].concat(_toConsumableArray(selected), [item]);\n            setSelected(newArray);\n          }\n        },\n        key: item,\n        style: [styles.box, selected.includes(item) ? {\n          backgroundColor: colors.gray\n        } : {}],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    title: \"NEW RANDOM SET\",\n    onPress: function onPress() {\n      return console.log(\"New random set\");\n    },\n    type: \"random\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(IconButton, {\n    title: \"TRAIN\",\n    onPress: function onPress() {\n      return console.log(\"Train\");\n    },\n    type: \"sync\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  box: {\n    width: \"48%\",\n    backgroundColor: \"#393939\",\n    height: 180,\n    marginTop: 10,\n    borderRadius: 12\n  },\n  buttons: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 64,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.background\n  }\n});","map":{"version":3,"sources":["/Users/thqv/Desktop/Bachelor/xqc-app/src/screens/home/Home.tsx"],"names":["React","useEffect","useState","Header","IconButton","useSelector","useDispatch","Container","colors","Home","navigation","loading","state","setState","selected","setSelected","dispatch","redux","testConnection","fetch","method","then","resp","json","res","console","log","catch","err","error","initExquisitor","headers","unsubscribe","addListener","data","goBack","justifyContent","item","index","includes","indexOf","temp","splice","newArray","styles","box","backgroundColor","gray","buttons","marginLeft","marginRight","StyleSheet","create","width","height","marginTop","borderRadius","position","bottom","left","right","flexDirection","alignItems","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, FlatList, View } from \"react-native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { HomeStackParamList } from \"../../utils/types\";\nimport { Text } from \"../../components/atoms/index\";\nimport { Header, Button, IconButton } from \"../../components/molecules/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container } from \"../../containers/index\";\nimport {} from \"../../redux/reducers\";\nimport { colors } from \"../../utils/theme\";\n\ntype HomeProps = StackNavigationProp<HomeStackParamList, \"Home\">;\n\ntype Props = {\n  navigation: HomeProps;\n};\n\nexport default function Home({ navigation }: Props) {\n  const [state, setState] = useState({ loading: false });\n  const [selected, setSelected] = useState<number[]>([]);\n  const dispatch = useDispatch();\n  const redux = useSelector((state) => state);\n\n  const testConnection = async () => {\n    fetch(\"http://bjth.itu.dk:5001/\", {\n      method: \"GET\",\n    })\n      .then((resp) => resp.json())\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.error(\"Error:\", err);\n      });\n  };\n\n  const initExquisitor = async () => {\n    fetch(\"http://bjth.itu.dk:5001/initExquisitor\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.error(\"Error:\", err);\n      });\n  };\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {});\n\n    return unsubscribe;\n  }, [navigation]);\n\n  const data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\n  return (\n    <Container>\n      <Header title=\"XQC\" onPress={() => navigation.goBack()} menu />\n      {/* <ScrollView style={{ flex: 1 }}>\n        <Button onPress={() => testConnection()} title=\"Hent\" />\n        <Button onPress={() => initExquisitor()} title=\"Init\" />\n      </ScrollView> */}\n\n      <FlatList\n        columnWrapperStyle={{ justifyContent: \"space-between\" }}\n        data={data}\n        numColumns={2}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                if (selected.includes(item)) {\n                  const index = selected.indexOf(item);\n                  var temp = [...selected];\n                  temp.splice(index, 1);\n                  setSelected(temp);\n                } else {\n                  var newArray = [...selected, item];\n                  setSelected(newArray);\n                }\n              }}\n              key={item}\n              style={[\n                styles.box,\n                selected.includes(item) ? { backgroundColor: colors.gray } : {},\n              ]}\n            ></TouchableOpacity>\n          );\n        }}\n      />\n      <View style={styles.buttons}>\n        <IconButton\n          title=\"NEW RANDOM SET\"\n          onPress={() => console.log(\"New random set\")}\n          type=\"random\"\n          style={{ marginLeft: 10, marginRight: 10 }}\n          secondary\n        />\n        <IconButton\n          title=\"TRAIN\"\n          onPress={() => console.log(\"Train\")}\n          type=\"sync\"\n        />\n      </View>\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    width: \"48%\",\n    backgroundColor: \"#393939\",\n    height: 180,\n    marginTop: 10,\n    borderRadius: 12,\n  },\n  buttons: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 64,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.background,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}